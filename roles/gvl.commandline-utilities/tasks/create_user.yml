
- name: Make sure persistent storage home directory exists
  file: name="{{ homedir_path }}" state=directory
  sudo_user: root

- name: Make sure passlib is installed
  pip: name=passlib state=present executable=/usr/bin/pip2
  sudo_user: root
  when: use_ubuntu_password == "no"

- name: Retrieve ubuntu password
  getent: database=shadow key=ubuntu split=":"
  register: debug_password
  sudo_user: root
  sudo: yes
  when: use_ubuntu_password == "yes"

# Generate both hashes for linux and for ipython
- name: Ask for new user password
  shell: python -c "from passlib.hash import sha512_crypt; import getpass, IPython; pwd=getpass.getpass(); print sha512_crypt.encrypt(pwd), IPython.lib.passwd(passphrase=pwd)"
  register: user_specified_password_hashes
  when: use_ubuntu_password == "no"

- name: Use ubuntu password for new user
  set_fact: new_user_password="{{ getent_shadow['ubuntu'][0] }}"
  when: use_ubuntu_password == "yes"

- name: Use user-specified password for new user
  set_fact: new_user_password="{{ user_specified_password_hashes.stdout.split()[0] }}"
  when: use_ubuntu_password == "no"

- name: Create new user account with desired password, home dir in persistent storage
  user: name="{{ new_user }}"
        state=present
        password="{{ new_user_password }}"
        home="{{ homedir_path }}/{{ new_user }}"
        move_home=yes 
        shell="{{ user_shell }}"
  sudo: yes
  sudo_user: root

- name: Symlink to moved home directory
  file: state=link src="{{ homedir_path }}/{{ new_user }}" dest=/home/{{ new_user }}
  sudo_user: root

- name: Make sure FUSE group exists
  group: name="fuse" state=present
  sudo_user: root

- name: Make sure fuse is in fuse User Private Group
  user: name="fuse" groups=fuse append=yes
  sudo_user: root

- name: Add new user to FUSE group
  user: name="{{ new_user }}" groups=fuse append=yes
  sudo_user: root

- name: Add new user to RStudio group if it exists
  user: name="{{ new_user }}" groups=rstudio_users append=yes
  ignore_errors: yes
  sudo_user: root

